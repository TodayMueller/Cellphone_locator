// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: location_subscription.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_location_5fsubscription_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_location_5fsubscription_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "location_data.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_location_5fsubscription_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_location_5fsubscription_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_location_5fsubscription_2eproto;
namespace location {
class GetProximityTriggersReply;
struct GetProximityTriggersReplyDefaultTypeInternal;
extern GetProximityTriggersReplyDefaultTypeInternal _GetProximityTriggersReply_default_instance_;
class GetZoneTriggersReply;
struct GetZoneTriggersReplyDefaultTypeInternal;
extern GetZoneTriggersReplyDefaultTypeInternal _GetZoneTriggersReply_default_instance_;
class NewTriggerReply;
struct NewTriggerReplyDefaultTypeInternal;
extern NewTriggerReplyDefaultTypeInternal _NewTriggerReply_default_instance_;
class ProximityTrigger;
struct ProximityTriggerDefaultTypeInternal;
extern ProximityTriggerDefaultTypeInternal _ProximityTrigger_default_instance_;
class ProximityTriggerWithId;
struct ProximityTriggerWithIdDefaultTypeInternal;
extern ProximityTriggerWithIdDefaultTypeInternal _ProximityTriggerWithId_default_instance_;
class RemoveTriggerReply;
struct RemoveTriggerReplyDefaultTypeInternal;
extern RemoveTriggerReplyDefaultTypeInternal _RemoveTriggerReply_default_instance_;
class ZoneTrigger;
struct ZoneTriggerDefaultTypeInternal;
extern ZoneTriggerDefaultTypeInternal _ZoneTrigger_default_instance_;
class ZoneTriggerWithId;
struct ZoneTriggerWithIdDefaultTypeInternal;
extern ZoneTriggerWithIdDefaultTypeInternal _ZoneTriggerWithId_default_instance_;
}  // namespace location
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace location {
enum ZoneTrigger_Event : int {
  ZoneTrigger_Event_ENTER = 0,
  ZoneTrigger_Event_EXIT = 1,
  ZoneTrigger_Event_ALL = 2,
  ZoneTrigger_Event_ZoneTrigger_Event_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ZoneTrigger_Event_ZoneTrigger_Event_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ZoneTrigger_Event_IsValid(int value);
extern const uint32_t ZoneTrigger_Event_internal_data_[];
constexpr ZoneTrigger_Event ZoneTrigger_Event_Event_MIN = static_cast<ZoneTrigger_Event>(0);
constexpr ZoneTrigger_Event ZoneTrigger_Event_Event_MAX = static_cast<ZoneTrigger_Event>(2);
constexpr int ZoneTrigger_Event_Event_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
ZoneTrigger_Event_descriptor();
template <typename T>
const std::string& ZoneTrigger_Event_Name(T value) {
  static_assert(std::is_same<T, ZoneTrigger_Event>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Event_Name().");
  return ZoneTrigger_Event_Name(static_cast<ZoneTrigger_Event>(value));
}
template <>
inline const std::string& ZoneTrigger_Event_Name(ZoneTrigger_Event value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ZoneTrigger_Event_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ZoneTrigger_Event_Parse(absl::string_view name, ZoneTrigger_Event* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ZoneTrigger_Event>(
      ZoneTrigger_Event_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ZoneTrigger final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.ZoneTrigger) */ {
 public:
  inline ZoneTrigger() : ZoneTrigger(nullptr) {}
  ~ZoneTrigger() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ZoneTrigger(::google::protobuf::internal::ConstantInitialized);

  inline ZoneTrigger(const ZoneTrigger& from)
      : ZoneTrigger(nullptr, from) {}
  ZoneTrigger(ZoneTrigger&& from) noexcept
    : ZoneTrigger() {
    *this = ::std::move(from);
  }

  inline ZoneTrigger& operator=(const ZoneTrigger& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZoneTrigger& operator=(ZoneTrigger&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZoneTrigger& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZoneTrigger* internal_default_instance() {
    return reinterpret_cast<const ZoneTrigger*>(
               &_ZoneTrigger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ZoneTrigger& a, ZoneTrigger& b) {
    a.Swap(&b);
  }
  inline void Swap(ZoneTrigger* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZoneTrigger* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZoneTrigger* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ZoneTrigger>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZoneTrigger& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ZoneTrigger& from) {
    ZoneTrigger::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ZoneTrigger* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.ZoneTrigger";
  }
  protected:
  explicit ZoneTrigger(::google::protobuf::Arena* arena);
  ZoneTrigger(::google::protobuf::Arena* arena, const ZoneTrigger& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Event = ZoneTrigger_Event;
  static constexpr Event ENTER = ZoneTrigger_Event_ENTER;
  static constexpr Event EXIT = ZoneTrigger_Event_EXIT;
  static constexpr Event ALL = ZoneTrigger_Event_ALL;
  static inline bool Event_IsValid(int value) {
    return ZoneTrigger_Event_IsValid(value);
  }
  static constexpr Event Event_MIN = ZoneTrigger_Event_Event_MIN;
  static constexpr Event Event_MAX = ZoneTrigger_Event_Event_MAX;
  static constexpr int Event_ARRAYSIZE = ZoneTrigger_Event_Event_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Event_descriptor() {
    return ZoneTrigger_Event_descriptor();
  }
  template <typename T>
  static inline const std::string& Event_Name(T value) {
    return ZoneTrigger_Event_Name(value);
  }
  static inline bool Event_Parse(absl::string_view name, Event* value) {
    return ZoneTrigger_Event_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriberIdFieldNumber = 1,
    kZoneIdFieldNumber = 2,
    kEventFieldNumber = 3,
  };
  // string subscriberId = 1;
  void clear_subscriberid() ;
  const std::string& subscriberid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subscriberid(Arg_&& arg, Args_... args);
  std::string* mutable_subscriberid();
  PROTOBUF_NODISCARD std::string* release_subscriberid();
  void set_allocated_subscriberid(std::string* value);

  private:
  const std::string& _internal_subscriberid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subscriberid(
      const std::string& value);
  std::string* _internal_mutable_subscriberid();

  public:
  // uint64 zoneId = 2;
  void clear_zoneid() ;
  ::uint64_t zoneid() const;
  void set_zoneid(::uint64_t value);

  private:
  ::uint64_t _internal_zoneid() const;
  void _internal_set_zoneid(::uint64_t value);

  public:
  // .location.ZoneTrigger.Event event = 3;
  void clear_event() ;
  ::location::ZoneTrigger_Event event() const;
  void set_event(::location::ZoneTrigger_Event value);

  private:
  ::location::ZoneTrigger_Event _internal_event() const;
  void _internal_set_event(::location::ZoneTrigger_Event value);

  public:
  // @@protoc_insertion_point(class_scope:location.ZoneTrigger)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr subscriberid_;
    ::uint64_t zoneid_;
    int event_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_5fsubscription_2eproto;
};// -------------------------------------------------------------------

class RemoveTriggerReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.RemoveTriggerReply) */ {
 public:
  inline RemoveTriggerReply() : RemoveTriggerReply(nullptr) {}
  ~RemoveTriggerReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveTriggerReply(::google::protobuf::internal::ConstantInitialized);

  inline RemoveTriggerReply(const RemoveTriggerReply& from)
      : RemoveTriggerReply(nullptr, from) {}
  RemoveTriggerReply(RemoveTriggerReply&& from) noexcept
    : RemoveTriggerReply() {
    *this = ::std::move(from);
  }

  inline RemoveTriggerReply& operator=(const RemoveTriggerReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveTriggerReply& operator=(RemoveTriggerReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveTriggerReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveTriggerReply* internal_default_instance() {
    return reinterpret_cast<const RemoveTriggerReply*>(
               &_RemoveTriggerReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RemoveTriggerReply& a, RemoveTriggerReply& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveTriggerReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveTriggerReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveTriggerReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveTriggerReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveTriggerReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RemoveTriggerReply& from) {
    RemoveTriggerReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoveTriggerReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.RemoveTriggerReply";
  }
  protected:
  explicit RemoveTriggerReply(::google::protobuf::Arena* arena);
  RemoveTriggerReply(::google::protobuf::Arena* arena, const RemoveTriggerReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
  };
  // .location.StatusCode code = 1;
  void clear_code() ;
  ::location::StatusCode code() const;
  void set_code(::location::StatusCode value);

  private:
  ::location::StatusCode _internal_code() const;
  void _internal_set_code(::location::StatusCode value);

  public:
  // @@protoc_insertion_point(class_scope:location.RemoveTriggerReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_5fsubscription_2eproto;
};// -------------------------------------------------------------------

class ProximityTrigger final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.ProximityTrigger) */ {
 public:
  inline ProximityTrigger() : ProximityTrigger(nullptr) {}
  ~ProximityTrigger() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ProximityTrigger(::google::protobuf::internal::ConstantInitialized);

  inline ProximityTrigger(const ProximityTrigger& from)
      : ProximityTrigger(nullptr, from) {}
  ProximityTrigger(ProximityTrigger&& from) noexcept
    : ProximityTrigger() {
    *this = ::std::move(from);
  }

  inline ProximityTrigger& operator=(const ProximityTrigger& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProximityTrigger& operator=(ProximityTrigger&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProximityTrigger& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProximityTrigger* internal_default_instance() {
    return reinterpret_cast<const ProximityTrigger*>(
               &_ProximityTrigger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ProximityTrigger& a, ProximityTrigger& b) {
    a.Swap(&b);
  }
  inline void Swap(ProximityTrigger* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProximityTrigger* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProximityTrigger* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProximityTrigger>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProximityTrigger& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ProximityTrigger& from) {
    ProximityTrigger::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProximityTrigger* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.ProximityTrigger";
  }
  protected:
  explicit ProximityTrigger(::google::protobuf::Arena* arena);
  ProximityTrigger(::google::protobuf::Arena* arena, const ProximityTrigger& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUser1IdFieldNumber = 1,
    kUser2IdFieldNumber = 2,
    kDistanceFieldNumber = 3,
  };
  // string user1Id = 1;
  void clear_user1id() ;
  const std::string& user1id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user1id(Arg_&& arg, Args_... args);
  std::string* mutable_user1id();
  PROTOBUF_NODISCARD std::string* release_user1id();
  void set_allocated_user1id(std::string* value);

  private:
  const std::string& _internal_user1id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user1id(
      const std::string& value);
  std::string* _internal_mutable_user1id();

  public:
  // string user2Id = 2;
  void clear_user2id() ;
  const std::string& user2id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user2id(Arg_&& arg, Args_... args);
  std::string* mutable_user2id();
  PROTOBUF_NODISCARD std::string* release_user2id();
  void set_allocated_user2id(std::string* value);

  private:
  const std::string& _internal_user2id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user2id(
      const std::string& value);
  std::string* _internal_mutable_user2id();

  public:
  // uint64 distance = 3;
  void clear_distance() ;
  ::uint64_t distance() const;
  void set_distance(::uint64_t value);

  private:
  ::uint64_t _internal_distance() const;
  void _internal_set_distance(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:location.ProximityTrigger)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr user1id_;
    ::google::protobuf::internal::ArenaStringPtr user2id_;
    ::uint64_t distance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_5fsubscription_2eproto;
};// -------------------------------------------------------------------

class NewTriggerReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.NewTriggerReply) */ {
 public:
  inline NewTriggerReply() : NewTriggerReply(nullptr) {}
  ~NewTriggerReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NewTriggerReply(::google::protobuf::internal::ConstantInitialized);

  inline NewTriggerReply(const NewTriggerReply& from)
      : NewTriggerReply(nullptr, from) {}
  NewTriggerReply(NewTriggerReply&& from) noexcept
    : NewTriggerReply() {
    *this = ::std::move(from);
  }

  inline NewTriggerReply& operator=(const NewTriggerReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewTriggerReply& operator=(NewTriggerReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewTriggerReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewTriggerReply* internal_default_instance() {
    return reinterpret_cast<const NewTriggerReply*>(
               &_NewTriggerReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NewTriggerReply& a, NewTriggerReply& b) {
    a.Swap(&b);
  }
  inline void Swap(NewTriggerReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewTriggerReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewTriggerReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NewTriggerReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewTriggerReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NewTriggerReply& from) {
    NewTriggerReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NewTriggerReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.NewTriggerReply";
  }
  protected:
  explicit NewTriggerReply(::google::protobuf::Arena* arena);
  NewTriggerReply(::google::protobuf::Arena* arena, const NewTriggerReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTriggerIdFieldNumber = 2,
    kCodeFieldNumber = 1,
  };
  // optional uint64 triggerId = 2;
  bool has_triggerid() const;
  void clear_triggerid() ;
  ::uint64_t triggerid() const;
  void set_triggerid(::uint64_t value);

  private:
  ::uint64_t _internal_triggerid() const;
  void _internal_set_triggerid(::uint64_t value);

  public:
  // .location.StatusCode code = 1;
  void clear_code() ;
  ::location::StatusCode code() const;
  void set_code(::location::StatusCode value);

  private:
  ::location::StatusCode _internal_code() const;
  void _internal_set_code(::location::StatusCode value);

  public:
  // @@protoc_insertion_point(class_scope:location.NewTriggerReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t triggerid_;
    int code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_5fsubscription_2eproto;
};// -------------------------------------------------------------------

class ZoneTriggerWithId final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.ZoneTriggerWithId) */ {
 public:
  inline ZoneTriggerWithId() : ZoneTriggerWithId(nullptr) {}
  ~ZoneTriggerWithId() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ZoneTriggerWithId(::google::protobuf::internal::ConstantInitialized);

  inline ZoneTriggerWithId(const ZoneTriggerWithId& from)
      : ZoneTriggerWithId(nullptr, from) {}
  ZoneTriggerWithId(ZoneTriggerWithId&& from) noexcept
    : ZoneTriggerWithId() {
    *this = ::std::move(from);
  }

  inline ZoneTriggerWithId& operator=(const ZoneTriggerWithId& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZoneTriggerWithId& operator=(ZoneTriggerWithId&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZoneTriggerWithId& default_instance() {
    return *internal_default_instance();
  }
  static inline const ZoneTriggerWithId* internal_default_instance() {
    return reinterpret_cast<const ZoneTriggerWithId*>(
               &_ZoneTriggerWithId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ZoneTriggerWithId& a, ZoneTriggerWithId& b) {
    a.Swap(&b);
  }
  inline void Swap(ZoneTriggerWithId* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZoneTriggerWithId* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZoneTriggerWithId* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ZoneTriggerWithId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZoneTriggerWithId& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ZoneTriggerWithId& from) {
    ZoneTriggerWithId::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ZoneTriggerWithId* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.ZoneTriggerWithId";
  }
  protected:
  explicit ZoneTriggerWithId(::google::protobuf::Arena* arena);
  ZoneTriggerWithId(::google::protobuf::Arena* arena, const ZoneTriggerWithId& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZoneTriggerFieldNumber = 2,
    kTriggerIdFieldNumber = 1,
  };
  // .location.ZoneTrigger zoneTrigger = 2;
  bool has_zonetrigger() const;
  void clear_zonetrigger() ;
  const ::location::ZoneTrigger& zonetrigger() const;
  PROTOBUF_NODISCARD ::location::ZoneTrigger* release_zonetrigger();
  ::location::ZoneTrigger* mutable_zonetrigger();
  void set_allocated_zonetrigger(::location::ZoneTrigger* value);
  void unsafe_arena_set_allocated_zonetrigger(::location::ZoneTrigger* value);
  ::location::ZoneTrigger* unsafe_arena_release_zonetrigger();

  private:
  const ::location::ZoneTrigger& _internal_zonetrigger() const;
  ::location::ZoneTrigger* _internal_mutable_zonetrigger();

  public:
  // uint64 triggerId = 1;
  void clear_triggerid() ;
  ::uint64_t triggerid() const;
  void set_triggerid(::uint64_t value);

  private:
  ::uint64_t _internal_triggerid() const;
  void _internal_set_triggerid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:location.ZoneTriggerWithId)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::location::ZoneTrigger* zonetrigger_;
    ::uint64_t triggerid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_5fsubscription_2eproto;
};// -------------------------------------------------------------------

class ProximityTriggerWithId final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.ProximityTriggerWithId) */ {
 public:
  inline ProximityTriggerWithId() : ProximityTriggerWithId(nullptr) {}
  ~ProximityTriggerWithId() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ProximityTriggerWithId(::google::protobuf::internal::ConstantInitialized);

  inline ProximityTriggerWithId(const ProximityTriggerWithId& from)
      : ProximityTriggerWithId(nullptr, from) {}
  ProximityTriggerWithId(ProximityTriggerWithId&& from) noexcept
    : ProximityTriggerWithId() {
    *this = ::std::move(from);
  }

  inline ProximityTriggerWithId& operator=(const ProximityTriggerWithId& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProximityTriggerWithId& operator=(ProximityTriggerWithId&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProximityTriggerWithId& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProximityTriggerWithId* internal_default_instance() {
    return reinterpret_cast<const ProximityTriggerWithId*>(
               &_ProximityTriggerWithId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ProximityTriggerWithId& a, ProximityTriggerWithId& b) {
    a.Swap(&b);
  }
  inline void Swap(ProximityTriggerWithId* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProximityTriggerWithId* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProximityTriggerWithId* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProximityTriggerWithId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProximityTriggerWithId& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ProximityTriggerWithId& from) {
    ProximityTriggerWithId::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProximityTriggerWithId* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.ProximityTriggerWithId";
  }
  protected:
  explicit ProximityTriggerWithId(::google::protobuf::Arena* arena);
  ProximityTriggerWithId(::google::protobuf::Arena* arena, const ProximityTriggerWithId& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProximityTriggerFieldNumber = 2,
    kTriggerIdFieldNumber = 1,
  };
  // .location.ProximityTrigger proximityTrigger = 2;
  bool has_proximitytrigger() const;
  void clear_proximitytrigger() ;
  const ::location::ProximityTrigger& proximitytrigger() const;
  PROTOBUF_NODISCARD ::location::ProximityTrigger* release_proximitytrigger();
  ::location::ProximityTrigger* mutable_proximitytrigger();
  void set_allocated_proximitytrigger(::location::ProximityTrigger* value);
  void unsafe_arena_set_allocated_proximitytrigger(::location::ProximityTrigger* value);
  ::location::ProximityTrigger* unsafe_arena_release_proximitytrigger();

  private:
  const ::location::ProximityTrigger& _internal_proximitytrigger() const;
  ::location::ProximityTrigger* _internal_mutable_proximitytrigger();

  public:
  // uint64 triggerId = 1;
  void clear_triggerid() ;
  ::uint64_t triggerid() const;
  void set_triggerid(::uint64_t value);

  private:
  ::uint64_t _internal_triggerid() const;
  void _internal_set_triggerid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:location.ProximityTriggerWithId)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::location::ProximityTrigger* proximitytrigger_;
    ::uint64_t triggerid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_5fsubscription_2eproto;
};// -------------------------------------------------------------------

class GetZoneTriggersReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.GetZoneTriggersReply) */ {
 public:
  inline GetZoneTriggersReply() : GetZoneTriggersReply(nullptr) {}
  ~GetZoneTriggersReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetZoneTriggersReply(::google::protobuf::internal::ConstantInitialized);

  inline GetZoneTriggersReply(const GetZoneTriggersReply& from)
      : GetZoneTriggersReply(nullptr, from) {}
  GetZoneTriggersReply(GetZoneTriggersReply&& from) noexcept
    : GetZoneTriggersReply() {
    *this = ::std::move(from);
  }

  inline GetZoneTriggersReply& operator=(const GetZoneTriggersReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetZoneTriggersReply& operator=(GetZoneTriggersReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetZoneTriggersReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetZoneTriggersReply* internal_default_instance() {
    return reinterpret_cast<const GetZoneTriggersReply*>(
               &_GetZoneTriggersReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetZoneTriggersReply& a, GetZoneTriggersReply& b) {
    a.Swap(&b);
  }
  inline void Swap(GetZoneTriggersReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetZoneTriggersReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetZoneTriggersReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetZoneTriggersReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetZoneTriggersReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetZoneTriggersReply& from) {
    GetZoneTriggersReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetZoneTriggersReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.GetZoneTriggersReply";
  }
  protected:
  explicit GetZoneTriggersReply(::google::protobuf::Arena* arena);
  GetZoneTriggersReply(::google::protobuf::Arena* arena, const GetZoneTriggersReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTriggersFieldNumber = 1,
  };
  // repeated .location.ZoneTriggerWithId triggers = 1;
  int triggers_size() const;
  private:
  int _internal_triggers_size() const;

  public:
  void clear_triggers() ;
  ::location::ZoneTriggerWithId* mutable_triggers(int index);
  ::google::protobuf::RepeatedPtrField< ::location::ZoneTriggerWithId >*
      mutable_triggers();
  private:
  const ::google::protobuf::RepeatedPtrField<::location::ZoneTriggerWithId>& _internal_triggers() const;
  ::google::protobuf::RepeatedPtrField<::location::ZoneTriggerWithId>* _internal_mutable_triggers();
  public:
  const ::location::ZoneTriggerWithId& triggers(int index) const;
  ::location::ZoneTriggerWithId* add_triggers();
  const ::google::protobuf::RepeatedPtrField< ::location::ZoneTriggerWithId >&
      triggers() const;
  // @@protoc_insertion_point(class_scope:location.GetZoneTriggersReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::location::ZoneTriggerWithId > triggers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_5fsubscription_2eproto;
};// -------------------------------------------------------------------

class GetProximityTriggersReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.GetProximityTriggersReply) */ {
 public:
  inline GetProximityTriggersReply() : GetProximityTriggersReply(nullptr) {}
  ~GetProximityTriggersReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetProximityTriggersReply(::google::protobuf::internal::ConstantInitialized);

  inline GetProximityTriggersReply(const GetProximityTriggersReply& from)
      : GetProximityTriggersReply(nullptr, from) {}
  GetProximityTriggersReply(GetProximityTriggersReply&& from) noexcept
    : GetProximityTriggersReply() {
    *this = ::std::move(from);
  }

  inline GetProximityTriggersReply& operator=(const GetProximityTriggersReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetProximityTriggersReply& operator=(GetProximityTriggersReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetProximityTriggersReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetProximityTriggersReply* internal_default_instance() {
    return reinterpret_cast<const GetProximityTriggersReply*>(
               &_GetProximityTriggersReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetProximityTriggersReply& a, GetProximityTriggersReply& b) {
    a.Swap(&b);
  }
  inline void Swap(GetProximityTriggersReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetProximityTriggersReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetProximityTriggersReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetProximityTriggersReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetProximityTriggersReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetProximityTriggersReply& from) {
    GetProximityTriggersReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetProximityTriggersReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.GetProximityTriggersReply";
  }
  protected:
  explicit GetProximityTriggersReply(::google::protobuf::Arena* arena);
  GetProximityTriggersReply(::google::protobuf::Arena* arena, const GetProximityTriggersReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTriggersFieldNumber = 1,
  };
  // repeated .location.ProximityTriggerWithId triggers = 1;
  int triggers_size() const;
  private:
  int _internal_triggers_size() const;

  public:
  void clear_triggers() ;
  ::location::ProximityTriggerWithId* mutable_triggers(int index);
  ::google::protobuf::RepeatedPtrField< ::location::ProximityTriggerWithId >*
      mutable_triggers();
  private:
  const ::google::protobuf::RepeatedPtrField<::location::ProximityTriggerWithId>& _internal_triggers() const;
  ::google::protobuf::RepeatedPtrField<::location::ProximityTriggerWithId>* _internal_mutable_triggers();
  public:
  const ::location::ProximityTriggerWithId& triggers(int index) const;
  ::location::ProximityTriggerWithId* add_triggers();
  const ::google::protobuf::RepeatedPtrField< ::location::ProximityTriggerWithId >&
      triggers() const;
  // @@protoc_insertion_point(class_scope:location.GetProximityTriggersReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::location::ProximityTriggerWithId > triggers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_location_5fsubscription_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ZoneTrigger

// string subscriberId = 1;
inline void ZoneTrigger::clear_subscriberid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subscriberid_.ClearToEmpty();
}
inline const std::string& ZoneTrigger::subscriberid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:location.ZoneTrigger.subscriberId)
  return _internal_subscriberid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ZoneTrigger::set_subscriberid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subscriberid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:location.ZoneTrigger.subscriberId)
}
inline std::string* ZoneTrigger::mutable_subscriberid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subscriberid();
  // @@protoc_insertion_point(field_mutable:location.ZoneTrigger.subscriberId)
  return _s;
}
inline const std::string& ZoneTrigger::_internal_subscriberid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subscriberid_.Get();
}
inline void ZoneTrigger::_internal_set_subscriberid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subscriberid_.Set(value, GetArena());
}
inline std::string* ZoneTrigger::_internal_mutable_subscriberid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subscriberid_.Mutable( GetArena());
}
inline std::string* ZoneTrigger::release_subscriberid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:location.ZoneTrigger.subscriberId)
  return _impl_.subscriberid_.Release();
}
inline void ZoneTrigger::set_allocated_subscriberid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subscriberid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subscriberid_.IsDefault()) {
          _impl_.subscriberid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:location.ZoneTrigger.subscriberId)
}

// uint64 zoneId = 2;
inline void ZoneTrigger::clear_zoneid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.zoneid_ = ::uint64_t{0u};
}
inline ::uint64_t ZoneTrigger::zoneid() const {
  // @@protoc_insertion_point(field_get:location.ZoneTrigger.zoneId)
  return _internal_zoneid();
}
inline void ZoneTrigger::set_zoneid(::uint64_t value) {
  _internal_set_zoneid(value);
  // @@protoc_insertion_point(field_set:location.ZoneTrigger.zoneId)
}
inline ::uint64_t ZoneTrigger::_internal_zoneid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.zoneid_;
}
inline void ZoneTrigger::_internal_set_zoneid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.zoneid_ = value;
}

// .location.ZoneTrigger.Event event = 3;
inline void ZoneTrigger::clear_event() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.event_ = 0;
}
inline ::location::ZoneTrigger_Event ZoneTrigger::event() const {
  // @@protoc_insertion_point(field_get:location.ZoneTrigger.event)
  return _internal_event();
}
inline void ZoneTrigger::set_event(::location::ZoneTrigger_Event value) {
  _internal_set_event(value);
  // @@protoc_insertion_point(field_set:location.ZoneTrigger.event)
}
inline ::location::ZoneTrigger_Event ZoneTrigger::_internal_event() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::location::ZoneTrigger_Event>(_impl_.event_);
}
inline void ZoneTrigger::_internal_set_event(::location::ZoneTrigger_Event value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.event_ = value;
}

// -------------------------------------------------------------------

// NewTriggerReply

// .location.StatusCode code = 1;
inline void NewTriggerReply::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_ = 0;
}
inline ::location::StatusCode NewTriggerReply::code() const {
  // @@protoc_insertion_point(field_get:location.NewTriggerReply.code)
  return _internal_code();
}
inline void NewTriggerReply::set_code(::location::StatusCode value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:location.NewTriggerReply.code)
}
inline ::location::StatusCode NewTriggerReply::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::location::StatusCode>(_impl_.code_);
}
inline void NewTriggerReply::_internal_set_code(::location::StatusCode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_ = value;
}

// optional uint64 triggerId = 2;
inline bool NewTriggerReply::has_triggerid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NewTriggerReply::clear_triggerid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.triggerid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t NewTriggerReply::triggerid() const {
  // @@protoc_insertion_point(field_get:location.NewTriggerReply.triggerId)
  return _internal_triggerid();
}
inline void NewTriggerReply::set_triggerid(::uint64_t value) {
  _internal_set_triggerid(value);
  // @@protoc_insertion_point(field_set:location.NewTriggerReply.triggerId)
}
inline ::uint64_t NewTriggerReply::_internal_triggerid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.triggerid_;
}
inline void NewTriggerReply::_internal_set_triggerid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.triggerid_ = value;
}

// -------------------------------------------------------------------

// RemoveTriggerReply

// .location.StatusCode code = 1;
inline void RemoveTriggerReply::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_ = 0;
}
inline ::location::StatusCode RemoveTriggerReply::code() const {
  // @@protoc_insertion_point(field_get:location.RemoveTriggerReply.code)
  return _internal_code();
}
inline void RemoveTriggerReply::set_code(::location::StatusCode value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:location.RemoveTriggerReply.code)
}
inline ::location::StatusCode RemoveTriggerReply::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::location::StatusCode>(_impl_.code_);
}
inline void RemoveTriggerReply::_internal_set_code(::location::StatusCode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_ = value;
}

// -------------------------------------------------------------------

// ZoneTriggerWithId

// uint64 triggerId = 1;
inline void ZoneTriggerWithId::clear_triggerid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.triggerid_ = ::uint64_t{0u};
}
inline ::uint64_t ZoneTriggerWithId::triggerid() const {
  // @@protoc_insertion_point(field_get:location.ZoneTriggerWithId.triggerId)
  return _internal_triggerid();
}
inline void ZoneTriggerWithId::set_triggerid(::uint64_t value) {
  _internal_set_triggerid(value);
  // @@protoc_insertion_point(field_set:location.ZoneTriggerWithId.triggerId)
}
inline ::uint64_t ZoneTriggerWithId::_internal_triggerid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.triggerid_;
}
inline void ZoneTriggerWithId::_internal_set_triggerid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.triggerid_ = value;
}

// .location.ZoneTrigger zoneTrigger = 2;
inline bool ZoneTriggerWithId::has_zonetrigger() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.zonetrigger_ != nullptr);
  return value;
}
inline void ZoneTriggerWithId::clear_zonetrigger() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.zonetrigger_ != nullptr) _impl_.zonetrigger_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::location::ZoneTrigger& ZoneTriggerWithId::_internal_zonetrigger() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::location::ZoneTrigger* p = _impl_.zonetrigger_;
  return p != nullptr ? *p : reinterpret_cast<const ::location::ZoneTrigger&>(::location::_ZoneTrigger_default_instance_);
}
inline const ::location::ZoneTrigger& ZoneTriggerWithId::zonetrigger() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:location.ZoneTriggerWithId.zoneTrigger)
  return _internal_zonetrigger();
}
inline void ZoneTriggerWithId::unsafe_arena_set_allocated_zonetrigger(::location::ZoneTrigger* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.zonetrigger_);
  }
  _impl_.zonetrigger_ = reinterpret_cast<::location::ZoneTrigger*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:location.ZoneTriggerWithId.zoneTrigger)
}
inline ::location::ZoneTrigger* ZoneTriggerWithId::release_zonetrigger() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::location::ZoneTrigger* released = _impl_.zonetrigger_;
  _impl_.zonetrigger_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::location::ZoneTrigger* ZoneTriggerWithId::unsafe_arena_release_zonetrigger() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:location.ZoneTriggerWithId.zoneTrigger)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::location::ZoneTrigger* temp = _impl_.zonetrigger_;
  _impl_.zonetrigger_ = nullptr;
  return temp;
}
inline ::location::ZoneTrigger* ZoneTriggerWithId::_internal_mutable_zonetrigger() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.zonetrigger_ == nullptr) {
    auto* p = CreateMaybeMessage<::location::ZoneTrigger>(GetArena());
    _impl_.zonetrigger_ = reinterpret_cast<::location::ZoneTrigger*>(p);
  }
  return _impl_.zonetrigger_;
}
inline ::location::ZoneTrigger* ZoneTriggerWithId::mutable_zonetrigger() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::location::ZoneTrigger* _msg = _internal_mutable_zonetrigger();
  // @@protoc_insertion_point(field_mutable:location.ZoneTriggerWithId.zoneTrigger)
  return _msg;
}
inline void ZoneTriggerWithId::set_allocated_zonetrigger(::location::ZoneTrigger* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::location::ZoneTrigger*>(_impl_.zonetrigger_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::location::ZoneTrigger*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.zonetrigger_ = reinterpret_cast<::location::ZoneTrigger*>(value);
  // @@protoc_insertion_point(field_set_allocated:location.ZoneTriggerWithId.zoneTrigger)
}

// -------------------------------------------------------------------

// GetZoneTriggersReply

// repeated .location.ZoneTriggerWithId triggers = 1;
inline int GetZoneTriggersReply::_internal_triggers_size() const {
  return _internal_triggers().size();
}
inline int GetZoneTriggersReply::triggers_size() const {
  return _internal_triggers_size();
}
inline void GetZoneTriggersReply::clear_triggers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.triggers_.Clear();
}
inline ::location::ZoneTriggerWithId* GetZoneTriggersReply::mutable_triggers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:location.GetZoneTriggersReply.triggers)
  return _internal_mutable_triggers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::location::ZoneTriggerWithId>* GetZoneTriggersReply::mutable_triggers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:location.GetZoneTriggersReply.triggers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_triggers();
}
inline const ::location::ZoneTriggerWithId& GetZoneTriggersReply::triggers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:location.GetZoneTriggersReply.triggers)
  return _internal_triggers().Get(index);
}
inline ::location::ZoneTriggerWithId* GetZoneTriggersReply::add_triggers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::location::ZoneTriggerWithId* _add = _internal_mutable_triggers()->Add();
  // @@protoc_insertion_point(field_add:location.GetZoneTriggersReply.triggers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::location::ZoneTriggerWithId>& GetZoneTriggersReply::triggers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:location.GetZoneTriggersReply.triggers)
  return _internal_triggers();
}
inline const ::google::protobuf::RepeatedPtrField<::location::ZoneTriggerWithId>&
GetZoneTriggersReply::_internal_triggers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.triggers_;
}
inline ::google::protobuf::RepeatedPtrField<::location::ZoneTriggerWithId>*
GetZoneTriggersReply::_internal_mutable_triggers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.triggers_;
}

// -------------------------------------------------------------------

// ProximityTrigger

// string user1Id = 1;
inline void ProximityTrigger::clear_user1id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user1id_.ClearToEmpty();
}
inline const std::string& ProximityTrigger::user1id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:location.ProximityTrigger.user1Id)
  return _internal_user1id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProximityTrigger::set_user1id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user1id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:location.ProximityTrigger.user1Id)
}
inline std::string* ProximityTrigger::mutable_user1id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user1id();
  // @@protoc_insertion_point(field_mutable:location.ProximityTrigger.user1Id)
  return _s;
}
inline const std::string& ProximityTrigger::_internal_user1id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user1id_.Get();
}
inline void ProximityTrigger::_internal_set_user1id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user1id_.Set(value, GetArena());
}
inline std::string* ProximityTrigger::_internal_mutable_user1id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.user1id_.Mutable( GetArena());
}
inline std::string* ProximityTrigger::release_user1id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:location.ProximityTrigger.user1Id)
  return _impl_.user1id_.Release();
}
inline void ProximityTrigger::set_allocated_user1id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user1id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.user1id_.IsDefault()) {
          _impl_.user1id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:location.ProximityTrigger.user1Id)
}

// string user2Id = 2;
inline void ProximityTrigger::clear_user2id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user2id_.ClearToEmpty();
}
inline const std::string& ProximityTrigger::user2id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:location.ProximityTrigger.user2Id)
  return _internal_user2id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProximityTrigger::set_user2id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user2id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:location.ProximityTrigger.user2Id)
}
inline std::string* ProximityTrigger::mutable_user2id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user2id();
  // @@protoc_insertion_point(field_mutable:location.ProximityTrigger.user2Id)
  return _s;
}
inline const std::string& ProximityTrigger::_internal_user2id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user2id_.Get();
}
inline void ProximityTrigger::_internal_set_user2id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user2id_.Set(value, GetArena());
}
inline std::string* ProximityTrigger::_internal_mutable_user2id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.user2id_.Mutable( GetArena());
}
inline std::string* ProximityTrigger::release_user2id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:location.ProximityTrigger.user2Id)
  return _impl_.user2id_.Release();
}
inline void ProximityTrigger::set_allocated_user2id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user2id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.user2id_.IsDefault()) {
          _impl_.user2id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:location.ProximityTrigger.user2Id)
}

// uint64 distance = 3;
inline void ProximityTrigger::clear_distance() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.distance_ = ::uint64_t{0u};
}
inline ::uint64_t ProximityTrigger::distance() const {
  // @@protoc_insertion_point(field_get:location.ProximityTrigger.distance)
  return _internal_distance();
}
inline void ProximityTrigger::set_distance(::uint64_t value) {
  _internal_set_distance(value);
  // @@protoc_insertion_point(field_set:location.ProximityTrigger.distance)
}
inline ::uint64_t ProximityTrigger::_internal_distance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.distance_;
}
inline void ProximityTrigger::_internal_set_distance(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.distance_ = value;
}

// -------------------------------------------------------------------

// ProximityTriggerWithId

// uint64 triggerId = 1;
inline void ProximityTriggerWithId::clear_triggerid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.triggerid_ = ::uint64_t{0u};
}
inline ::uint64_t ProximityTriggerWithId::triggerid() const {
  // @@protoc_insertion_point(field_get:location.ProximityTriggerWithId.triggerId)
  return _internal_triggerid();
}
inline void ProximityTriggerWithId::set_triggerid(::uint64_t value) {
  _internal_set_triggerid(value);
  // @@protoc_insertion_point(field_set:location.ProximityTriggerWithId.triggerId)
}
inline ::uint64_t ProximityTriggerWithId::_internal_triggerid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.triggerid_;
}
inline void ProximityTriggerWithId::_internal_set_triggerid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.triggerid_ = value;
}

// .location.ProximityTrigger proximityTrigger = 2;
inline bool ProximityTriggerWithId::has_proximitytrigger() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.proximitytrigger_ != nullptr);
  return value;
}
inline void ProximityTriggerWithId::clear_proximitytrigger() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.proximitytrigger_ != nullptr) _impl_.proximitytrigger_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::location::ProximityTrigger& ProximityTriggerWithId::_internal_proximitytrigger() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::location::ProximityTrigger* p = _impl_.proximitytrigger_;
  return p != nullptr ? *p : reinterpret_cast<const ::location::ProximityTrigger&>(::location::_ProximityTrigger_default_instance_);
}
inline const ::location::ProximityTrigger& ProximityTriggerWithId::proximitytrigger() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:location.ProximityTriggerWithId.proximityTrigger)
  return _internal_proximitytrigger();
}
inline void ProximityTriggerWithId::unsafe_arena_set_allocated_proximitytrigger(::location::ProximityTrigger* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.proximitytrigger_);
  }
  _impl_.proximitytrigger_ = reinterpret_cast<::location::ProximityTrigger*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:location.ProximityTriggerWithId.proximityTrigger)
}
inline ::location::ProximityTrigger* ProximityTriggerWithId::release_proximitytrigger() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::location::ProximityTrigger* released = _impl_.proximitytrigger_;
  _impl_.proximitytrigger_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::location::ProximityTrigger* ProximityTriggerWithId::unsafe_arena_release_proximitytrigger() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:location.ProximityTriggerWithId.proximityTrigger)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::location::ProximityTrigger* temp = _impl_.proximitytrigger_;
  _impl_.proximitytrigger_ = nullptr;
  return temp;
}
inline ::location::ProximityTrigger* ProximityTriggerWithId::_internal_mutable_proximitytrigger() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.proximitytrigger_ == nullptr) {
    auto* p = CreateMaybeMessage<::location::ProximityTrigger>(GetArena());
    _impl_.proximitytrigger_ = reinterpret_cast<::location::ProximityTrigger*>(p);
  }
  return _impl_.proximitytrigger_;
}
inline ::location::ProximityTrigger* ProximityTriggerWithId::mutable_proximitytrigger() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::location::ProximityTrigger* _msg = _internal_mutable_proximitytrigger();
  // @@protoc_insertion_point(field_mutable:location.ProximityTriggerWithId.proximityTrigger)
  return _msg;
}
inline void ProximityTriggerWithId::set_allocated_proximitytrigger(::location::ProximityTrigger* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::location::ProximityTrigger*>(_impl_.proximitytrigger_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::location::ProximityTrigger*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.proximitytrigger_ = reinterpret_cast<::location::ProximityTrigger*>(value);
  // @@protoc_insertion_point(field_set_allocated:location.ProximityTriggerWithId.proximityTrigger)
}

// -------------------------------------------------------------------

// GetProximityTriggersReply

// repeated .location.ProximityTriggerWithId triggers = 1;
inline int GetProximityTriggersReply::_internal_triggers_size() const {
  return _internal_triggers().size();
}
inline int GetProximityTriggersReply::triggers_size() const {
  return _internal_triggers_size();
}
inline void GetProximityTriggersReply::clear_triggers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.triggers_.Clear();
}
inline ::location::ProximityTriggerWithId* GetProximityTriggersReply::mutable_triggers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:location.GetProximityTriggersReply.triggers)
  return _internal_mutable_triggers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::location::ProximityTriggerWithId>* GetProximityTriggersReply::mutable_triggers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:location.GetProximityTriggersReply.triggers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_triggers();
}
inline const ::location::ProximityTriggerWithId& GetProximityTriggersReply::triggers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:location.GetProximityTriggersReply.triggers)
  return _internal_triggers().Get(index);
}
inline ::location::ProximityTriggerWithId* GetProximityTriggersReply::add_triggers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::location::ProximityTriggerWithId* _add = _internal_mutable_triggers()->Add();
  // @@protoc_insertion_point(field_add:location.GetProximityTriggersReply.triggers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::location::ProximityTriggerWithId>& GetProximityTriggersReply::triggers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:location.GetProximityTriggersReply.triggers)
  return _internal_triggers();
}
inline const ::google::protobuf::RepeatedPtrField<::location::ProximityTriggerWithId>&
GetProximityTriggersReply::_internal_triggers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.triggers_;
}
inline ::google::protobuf::RepeatedPtrField<::location::ProximityTriggerWithId>*
GetProximityTriggersReply::_internal_mutable_triggers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.triggers_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace location


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::location::ZoneTrigger_Event> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::location::ZoneTrigger_Event>() {
  return ::location::ZoneTrigger_Event_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_location_5fsubscription_2eproto_2epb_2eh
