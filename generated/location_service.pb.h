// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: location_service.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_location_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_location_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/extension_set.h" // IWYU pragma: export
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/message.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/repeated_field.h" // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "location_data.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_location_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
} // namespace internal
} // namespace protobuf
} // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_location_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_location_5fservice_2eproto;
namespace location {
class SetSubscriberReply;
struct SetSubscriberReplyDefaultTypeInternal;
extern SetSubscriberReplyDefaultTypeInternal
    _SetSubscriberReply_default_instance_;
class SubscriberId;
struct SubscriberIdDefaultTypeInternal;
extern SubscriberIdDefaultTypeInternal _SubscriberId_default_instance_;
class SubscriberReply;
struct SubscriberReplyDefaultTypeInternal;
extern SubscriberReplyDefaultTypeInternal _SubscriberReply_default_instance_;
class SubscriberZonesReply;
struct SubscriberZonesReplyDefaultTypeInternal;
extern SubscriberZonesReplyDefaultTypeInternal
    _SubscriberZonesReply_default_instance_;
class SubscribersInZoneReply;
struct SubscribersInZoneReplyDefaultTypeInternal;
extern SubscribersInZoneReplyDefaultTypeInternal
    _SubscribersInZoneReply_default_instance_;
class ZoneId;
struct ZoneIdDefaultTypeInternal;
extern ZoneIdDefaultTypeInternal _ZoneId_default_instance_;
} // namespace location
namespace google {
namespace protobuf {} // namespace protobuf
} // namespace google

namespace location {

// ===================================================================

// -------------------------------------------------------------------

class ZoneId final : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.ZoneId)
                                                         */
{
public:
  inline ZoneId() : ZoneId(nullptr) {}
  ~ZoneId() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR
      ZoneId(::google::protobuf::internal::ConstantInitialized);

  inline ZoneId(const ZoneId &from) : ZoneId(nullptr, from) {}
  ZoneId(ZoneId &&from) noexcept : ZoneId() { *this = ::std::move(from); }

  inline ZoneId &operator=(const ZoneId &from) {
    CopyFrom(from);
    return *this;
  }
  inline ZoneId &operator=(ZoneId &&from) noexcept {
    if (this == &from)
      return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet &
  unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet *
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor *descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor *GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection *GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZoneId &default_instance() {
    return *internal_default_instance();
  }
  static inline const ZoneId *internal_default_instance() {
    return reinterpret_cast<const ZoneId *>(&_ZoneId_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;

  friend void swap(ZoneId &a, ZoneId &b) { a.Swap(&b); }
  inline void Swap(ZoneId *other) {
    if (other == this)
      return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZoneId *other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZoneId *New(::google::protobuf::Arena *arena = nullptr) const final {
    return CreateMaybeMessage<ZoneId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZoneId &from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ZoneId &from) { ZoneId::MergeImpl(*this, from); }

private:
  static void MergeImpl(::google::protobuf::Message &to_msg,
                        const ::google::protobuf::Message &from_msg);

public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char *
  _InternalParse(const char *ptr,
                 ::google::protobuf::internal::ParseContext *ctx) final;
  ::uint8_t *_InternalSerialize(
      ::uint8_t *target,
      ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

private:
  ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena *arena);
  void SharedDtor();
  void InternalSwap(ZoneId *other);

private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "location.ZoneId"; }

protected:
  explicit ZoneId(::google::protobuf::Arena *arena);
  ZoneId(::google::protobuf::Arena *arena, const ZoneId &from);

public:
  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData *GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint64 id = 1;
  void clear_id();
  ::uint64_t id() const;
  void set_id(::uint64_t value);

private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

public:
  // @@protoc_insertion_point(class_scope:location.ZoneId)
private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena, const Impl_ &from);
    ::uint64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_location_5fservice_2eproto;
}; // -------------------------------------------------------------------

class SubscriberId final : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.SubscriberId)
                                                               */
{
public:
  inline SubscriberId() : SubscriberId(nullptr) {}
  ~SubscriberId() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR
      SubscriberId(::google::protobuf::internal::ConstantInitialized);

  inline SubscriberId(const SubscriberId &from) : SubscriberId(nullptr, from) {}
  SubscriberId(SubscriberId &&from) noexcept : SubscriberId() {
    *this = ::std::move(from);
  }

  inline SubscriberId &operator=(const SubscriberId &from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscriberId &operator=(SubscriberId &&from) noexcept {
    if (this == &from)
      return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet &
  unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet *
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor *descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor *GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection *GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscriberId &default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscriberId *internal_default_instance() {
    return reinterpret_cast<const SubscriberId *>(
        &_SubscriberId_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;

  friend void swap(SubscriberId &a, SubscriberId &b) { a.Swap(&b); }
  inline void Swap(SubscriberId *other) {
    if (other == this)
      return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscriberId *other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscriberId *New(::google::protobuf::Arena *arena = nullptr) const final {
    return CreateMaybeMessage<SubscriberId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscriberId &from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscriberId &from) {
    SubscriberId::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::Message &to_msg,
                        const ::google::protobuf::Message &from_msg);

public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char *
  _InternalParse(const char *ptr,
                 ::google::protobuf::internal::ParseContext *ctx) final;
  ::uint8_t *_InternalSerialize(
      ::uint8_t *target,
      ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

private:
  ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena *arena);
  void SharedDtor();
  void InternalSwap(SubscriberId *other);

private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.SubscriberId";
  }

protected:
  explicit SubscriberId(::google::protobuf::Arena *arena);
  SubscriberId(::google::protobuf::Arena *arena, const SubscriberId &from);

public:
  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData *GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1;
  void clear_id();
  const std::string &id() const;
  template <typename Arg_ = const std::string &, typename... Args_>
  void set_id(Arg_ &&arg, Args_... args);
  std::string *mutable_id();
  PROTOBUF_NODISCARD std::string *release_id();
  void set_allocated_id(std::string *value);

private:
  const std::string &_internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(const std::string &value);
  std::string *_internal_mutable_id();

public:
  // @@protoc_insertion_point(class_scope:location.SubscriberId)
private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 32, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena, const Impl_ &from);
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_location_5fservice_2eproto;
}; // -------------------------------------------------------------------

class SetSubscriberReply final : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.SetSubscriberReply)
                                                                     */
{
public:
  inline SetSubscriberReply() : SetSubscriberReply(nullptr) {}
  ~SetSubscriberReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR
      SetSubscriberReply(::google::protobuf::internal::ConstantInitialized);

  inline SetSubscriberReply(const SetSubscriberReply &from)
      : SetSubscriberReply(nullptr, from) {}
  SetSubscriberReply(SetSubscriberReply &&from) noexcept
      : SetSubscriberReply() {
    *this = ::std::move(from);
  }

  inline SetSubscriberReply &operator=(const SetSubscriberReply &from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSubscriberReply &operator=(SetSubscriberReply &&from) noexcept {
    if (this == &from)
      return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet &
  unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet *
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor *descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor *GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection *GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSubscriberReply &default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSubscriberReply *internal_default_instance() {
    return reinterpret_cast<const SetSubscriberReply *>(
        &_SetSubscriberReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;

  friend void swap(SetSubscriberReply &a, SetSubscriberReply &b) { a.Swap(&b); }
  inline void Swap(SetSubscriberReply *other) {
    if (other == this)
      return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSubscriberReply *other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSubscriberReply *
  New(::google::protobuf::Arena *arena = nullptr) const final {
    return CreateMaybeMessage<SetSubscriberReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSubscriberReply &from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetSubscriberReply &from) {
    SetSubscriberReply::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::Message &to_msg,
                        const ::google::protobuf::Message &from_msg);

public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char *
  _InternalParse(const char *ptr,
                 ::google::protobuf::internal::ParseContext *ctx) final;
  ::uint8_t *_InternalSerialize(
      ::uint8_t *target,
      ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

private:
  ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena *arena);
  void SharedDtor();
  void InternalSwap(SetSubscriberReply *other);

private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.SetSubscriberReply";
  }

protected:
  explicit SetSubscriberReply(::google::protobuf::Arena *arena);
  SetSubscriberReply(::google::protobuf::Arena *arena,
                     const SetSubscriberReply &from);

public:
  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData *GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
  };
  // .location.StatusCode code = 1;
  void clear_code();
  ::location::StatusCode code() const;
  void set_code(::location::StatusCode value);

private:
  ::location::StatusCode _internal_code() const;
  void _internal_set_code(::location::StatusCode value);

public:
  // @@protoc_insertion_point(class_scope:location.SetSubscriberReply)
private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena, const Impl_ &from);
    int code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_location_5fservice_2eproto;
}; // -------------------------------------------------------------------

class SubscribersInZoneReply final : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.SubscribersInZoneReply)
                                                                         */
{
public:
  inline SubscribersInZoneReply() : SubscribersInZoneReply(nullptr) {}
  ~SubscribersInZoneReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR
      SubscribersInZoneReply(::google::protobuf::internal::ConstantInitialized);

  inline SubscribersInZoneReply(const SubscribersInZoneReply &from)
      : SubscribersInZoneReply(nullptr, from) {}
  SubscribersInZoneReply(SubscribersInZoneReply &&from) noexcept
      : SubscribersInZoneReply() {
    *this = ::std::move(from);
  }

  inline SubscribersInZoneReply &operator=(const SubscribersInZoneReply &from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribersInZoneReply &
  operator=(SubscribersInZoneReply &&from) noexcept {
    if (this == &from)
      return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet &
  unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet *
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor *descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor *GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection *GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribersInZoneReply &default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribersInZoneReply *internal_default_instance() {
    return reinterpret_cast<const SubscribersInZoneReply *>(
        &_SubscribersInZoneReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;

  friend void swap(SubscribersInZoneReply &a, SubscribersInZoneReply &b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribersInZoneReply *other) {
    if (other == this)
      return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribersInZoneReply *other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribersInZoneReply *
  New(::google::protobuf::Arena *arena = nullptr) const final {
    return CreateMaybeMessage<SubscribersInZoneReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribersInZoneReply &from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribersInZoneReply &from) {
    SubscribersInZoneReply::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::Message &to_msg,
                        const ::google::protobuf::Message &from_msg);

public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char *
  _InternalParse(const char *ptr,
                 ::google::protobuf::internal::ParseContext *ctx) final;
  ::uint8_t *_InternalSerialize(
      ::uint8_t *target,
      ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

private:
  ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena *arena);
  void SharedDtor();
  void InternalSwap(SubscribersInZoneReply *other);

private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.SubscribersInZoneReply";
  }

protected:
  explicit SubscribersInZoneReply(::google::protobuf::Arena *arena);
  SubscribersInZoneReply(::google::protobuf::Arena *arena,
                         const SubscribersInZoneReply &from);

public:
  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData *GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscribersFieldNumber = 2,
    kCodeFieldNumber = 1,
  };
  // repeated .location.SubscriberId subscribers = 2;
  int subscribers_size() const;

private:
  int _internal_subscribers_size() const;

public:
  void clear_subscribers();
  ::location::SubscriberId *mutable_subscribers(int index);
  ::google::protobuf::RepeatedPtrField<::location::SubscriberId> *
  mutable_subscribers();

private:
  const ::google::protobuf::RepeatedPtrField<::location::SubscriberId> &
  _internal_subscribers() const;
  ::google::protobuf::RepeatedPtrField<::location::SubscriberId> *
  _internal_mutable_subscribers();

public:
  const ::location::SubscriberId &subscribers(int index) const;
  ::location::SubscriberId *add_subscribers();
  const ::google::protobuf::RepeatedPtrField<::location::SubscriberId> &
  subscribers() const;
  // .location.StatusCode code = 1;
  void clear_code();
  ::location::StatusCode code() const;
  void set_code(::location::StatusCode value);

private:
  ::location::StatusCode _internal_code() const;
  void _internal_set_code(::location::StatusCode value);

public:
  // @@protoc_insertion_point(class_scope:location.SubscribersInZoneReply)
private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena, const Impl_ &from);
    ::google::protobuf::RepeatedPtrField<::location::SubscriberId> subscribers_;
    int code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_location_5fservice_2eproto;
}; // -------------------------------------------------------------------

class SubscriberZonesReply final : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.SubscriberZonesReply)
                                                                       */
{
public:
  inline SubscriberZonesReply() : SubscriberZonesReply(nullptr) {}
  ~SubscriberZonesReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR
      SubscriberZonesReply(::google::protobuf::internal::ConstantInitialized);

  inline SubscriberZonesReply(const SubscriberZonesReply &from)
      : SubscriberZonesReply(nullptr, from) {}
  SubscriberZonesReply(SubscriberZonesReply &&from) noexcept
      : SubscriberZonesReply() {
    *this = ::std::move(from);
  }

  inline SubscriberZonesReply &operator=(const SubscriberZonesReply &from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscriberZonesReply &operator=(SubscriberZonesReply &&from) noexcept {
    if (this == &from)
      return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet &
  unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet *
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor *descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor *GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection *GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscriberZonesReply &default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscriberZonesReply *internal_default_instance() {
    return reinterpret_cast<const SubscriberZonesReply *>(
        &_SubscriberZonesReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;

  friend void swap(SubscriberZonesReply &a, SubscriberZonesReply &b) {
    a.Swap(&b);
  }
  inline void Swap(SubscriberZonesReply *other) {
    if (other == this)
      return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscriberZonesReply *other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscriberZonesReply *
  New(::google::protobuf::Arena *arena = nullptr) const final {
    return CreateMaybeMessage<SubscriberZonesReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscriberZonesReply &from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscriberZonesReply &from) {
    SubscriberZonesReply::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::Message &to_msg,
                        const ::google::protobuf::Message &from_msg);

public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char *
  _InternalParse(const char *ptr,
                 ::google::protobuf::internal::ParseContext *ctx) final;
  ::uint8_t *_InternalSerialize(
      ::uint8_t *target,
      ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

private:
  ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena *arena);
  void SharedDtor();
  void InternalSwap(SubscriberZonesReply *other);

private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.SubscriberZonesReply";
  }

protected:
  explicit SubscriberZonesReply(::google::protobuf::Arena *arena);
  SubscriberZonesReply(::google::protobuf::Arena *arena,
                       const SubscriberZonesReply &from);

public:
  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData *GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZonesFieldNumber = 2,
    kCodeFieldNumber = 1,
  };
  // repeated .location.ZoneId zones = 2;
  int zones_size() const;

private:
  int _internal_zones_size() const;

public:
  void clear_zones();
  ::location::ZoneId *mutable_zones(int index);
  ::google::protobuf::RepeatedPtrField<::location::ZoneId> *mutable_zones();

private:
  const ::google::protobuf::RepeatedPtrField<::location::ZoneId> &
  _internal_zones() const;
  ::google::protobuf::RepeatedPtrField<::location::ZoneId> *
  _internal_mutable_zones();

public:
  const ::location::ZoneId &zones(int index) const;
  ::location::ZoneId *add_zones();
  const ::google::protobuf::RepeatedPtrField<::location::ZoneId> &zones() const;
  // .location.StatusCode code = 1;
  void clear_code();
  ::location::StatusCode code() const;
  void set_code(::location::StatusCode value);

private:
  ::location::StatusCode _internal_code() const;
  void _internal_set_code(::location::StatusCode value);

public:
  // @@protoc_insertion_point(class_scope:location.SubscriberZonesReply)
private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena, const Impl_ &from);
    ::google::protobuf::RepeatedPtrField<::location::ZoneId> zones_;
    int code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_location_5fservice_2eproto;
}; // -------------------------------------------------------------------

class SubscriberReply final : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:location.SubscriberReply)
                                                                  */
{
public:
  inline SubscriberReply() : SubscriberReply(nullptr) {}
  ~SubscriberReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR
      SubscriberReply(::google::protobuf::internal::ConstantInitialized);

  inline SubscriberReply(const SubscriberReply &from)
      : SubscriberReply(nullptr, from) {}
  SubscriberReply(SubscriberReply &&from) noexcept : SubscriberReply() {
    *this = ::std::move(from);
  }

  inline SubscriberReply &operator=(const SubscriberReply &from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscriberReply &operator=(SubscriberReply &&from) noexcept {
    if (this == &from)
      return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet &
  unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet *
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor *descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor *GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection *GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscriberReply &default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscriberReply *internal_default_instance() {
    return reinterpret_cast<const SubscriberReply *>(
        &_SubscriberReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;

  friend void swap(SubscriberReply &a, SubscriberReply &b) { a.Swap(&b); }
  inline void Swap(SubscriberReply *other) {
    if (other == this)
      return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscriberReply *other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscriberReply *New(::google::protobuf::Arena *arena = nullptr) const final {
    return CreateMaybeMessage<SubscriberReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscriberReply &from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscriberReply &from) {
    SubscriberReply::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::Message &to_msg,
                        const ::google::protobuf::Message &from_msg);

public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char *
  _InternalParse(const char *ptr,
                 ::google::protobuf::internal::ParseContext *ctx) final;
  ::uint8_t *_InternalSerialize(
      ::uint8_t *target,
      ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

private:
  ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena *arena);
  void SharedDtor();
  void InternalSwap(SubscriberReply *other);

private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "location.SubscriberReply";
  }

protected:
  explicit SubscriberReply(::google::protobuf::Arena *arena);
  SubscriberReply(::google::protobuf::Arena *arena,
                  const SubscriberReply &from);

public:
  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData *GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriberFieldNumber = 2,
    kCodeFieldNumber = 1,
  };
  // optional .location.Subscriber subscriber = 2;
  bool has_subscriber() const;
  void clear_subscriber();
  const ::location::Subscriber &subscriber() const;
  PROTOBUF_NODISCARD ::location::Subscriber *release_subscriber();
  ::location::Subscriber *mutable_subscriber();
  void set_allocated_subscriber(::location::Subscriber *value);
  void unsafe_arena_set_allocated_subscriber(::location::Subscriber *value);
  ::location::Subscriber *unsafe_arena_release_subscriber();

private:
  const ::location::Subscriber &_internal_subscriber() const;
  ::location::Subscriber *_internal_mutable_subscriber();

public:
  // .location.StatusCode code = 1;
  void clear_code();
  ::location::StatusCode code() const;
  void set_code(::location::StatusCode value);

private:
  ::location::StatusCode _internal_code() const;
  void _internal_set_code(::location::StatusCode value);

public:
  // @@protoc_insertion_point(class_scope:location.SubscriberReply)
private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena *arena, const Impl_ &from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::location::Subscriber *subscriber_;
    int code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_location_5fservice_2eproto;
};

// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif // __GNUC__
// -------------------------------------------------------------------

// SetSubscriberReply

// .location.StatusCode code = 1;
inline void SetSubscriberReply::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_ = 0;
}
inline ::location::StatusCode SetSubscriberReply::code() const {
  // @@protoc_insertion_point(field_get:location.SetSubscriberReply.code)
  return _internal_code();
}
inline void SetSubscriberReply::set_code(::location::StatusCode value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:location.SetSubscriberReply.code)
}
inline ::location::StatusCode SetSubscriberReply::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::location::StatusCode>(_impl_.code_);
}
inline void
SetSubscriberReply::_internal_set_code(::location::StatusCode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_ = value;
}

// -------------------------------------------------------------------

// SubscriberId

// string id = 1;
inline void SubscriberId::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string &
SubscriberId::id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:location.SubscriberId.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscriberId::set_id(Arg_ &&arg,
                                                        Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_ &&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:location.SubscriberId.id)
}
inline std::string *SubscriberId::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string *_s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:location.SubscriberId.id)
  return _s;
}
inline const std::string &SubscriberId::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void SubscriberId::_internal_set_id(const std::string &value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string *SubscriberId::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable(GetArena());
}
inline std::string *SubscriberId::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:location.SubscriberId.id)
  return _impl_.id_.Release();
}
inline void SubscriberId::set_allocated_id(std::string *value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:location.SubscriberId.id)
}

// -------------------------------------------------------------------

// ZoneId

// uint64 id = 1;
inline void ZoneId::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t ZoneId::id() const {
  // @@protoc_insertion_point(field_get:location.ZoneId.id)
  return _internal_id();
}
inline void ZoneId::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:location.ZoneId.id)
}
inline ::uint64_t ZoneId::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void ZoneId::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// SubscriberReply

// .location.StatusCode code = 1;
inline void SubscriberReply::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_ = 0;
}
inline ::location::StatusCode SubscriberReply::code() const {
  // @@protoc_insertion_point(field_get:location.SubscriberReply.code)
  return _internal_code();
}
inline void SubscriberReply::set_code(::location::StatusCode value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:location.SubscriberReply.code)
}
inline ::location::StatusCode SubscriberReply::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::location::StatusCode>(_impl_.code_);
}
inline void SubscriberReply::_internal_set_code(::location::StatusCode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_ = value;
}

// optional .location.Subscriber subscriber = 2;
inline bool SubscriberReply::has_subscriber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.subscriber_ != nullptr);
  return value;
}
inline const ::location::Subscriber &
SubscriberReply::_internal_subscriber() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::location::Subscriber *p = _impl_.subscriber_;
  return p != nullptr ? *p
                      : reinterpret_cast<const ::location::Subscriber &>(
                            ::location::_Subscriber_default_instance_);
}
inline const ::location::Subscriber &
SubscriberReply::subscriber() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:location.SubscriberReply.subscriber)
  return _internal_subscriber();
}
inline void SubscriberReply::unsafe_arena_set_allocated_subscriber(
    ::location::Subscriber *value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite *>(
        _impl_.subscriber_);
  }
  _impl_.subscriber_ = reinterpret_cast<::location::Subscriber *>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:location.SubscriberReply.subscriber)
}
inline ::location::Subscriber *SubscriberReply::release_subscriber() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::location::Subscriber *released = _impl_.subscriber_;
  _impl_.subscriber_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto *old = reinterpret_cast<::google::protobuf::MessageLite *>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::location::Subscriber *
SubscriberReply::unsafe_arena_release_subscriber() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:location.SubscriberReply.subscriber)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::location::Subscriber *temp = _impl_.subscriber_;
  _impl_.subscriber_ = nullptr;
  return temp;
}
inline ::location::Subscriber *SubscriberReply::_internal_mutable_subscriber() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.subscriber_ == nullptr) {
    auto *p = CreateMaybeMessage<::location::Subscriber>(GetArena());
    _impl_.subscriber_ = reinterpret_cast<::location::Subscriber *>(p);
  }
  return _impl_.subscriber_;
}
inline ::location::Subscriber *
SubscriberReply::mutable_subscriber() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::location::Subscriber *_msg = _internal_mutable_subscriber();
  // @@protoc_insertion_point(field_mutable:location.SubscriberReply.subscriber)
  return _msg;
}
inline void
SubscriberReply::set_allocated_subscriber(::location::Subscriber *value) {
  ::google::protobuf::Arena *message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite *>(
        _impl_.subscriber_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena *submessage_arena =
        reinterpret_cast<::google::protobuf::MessageLite *>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.subscriber_ = reinterpret_cast<::location::Subscriber *>(value);
  // @@protoc_insertion_point(field_set_allocated:location.SubscriberReply.subscriber)
}

// -------------------------------------------------------------------

// SubscriberZonesReply

// .location.StatusCode code = 1;
inline void SubscriberZonesReply::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_ = 0;
}
inline ::location::StatusCode SubscriberZonesReply::code() const {
  // @@protoc_insertion_point(field_get:location.SubscriberZonesReply.code)
  return _internal_code();
}
inline void SubscriberZonesReply::set_code(::location::StatusCode value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:location.SubscriberZonesReply.code)
}
inline ::location::StatusCode SubscriberZonesReply::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::location::StatusCode>(_impl_.code_);
}
inline void
SubscriberZonesReply::_internal_set_code(::location::StatusCode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_ = value;
}

// repeated .location.ZoneId zones = 2;
inline int SubscriberZonesReply::_internal_zones_size() const {
  return _internal_zones().size();
}
inline int SubscriberZonesReply::zones_size() const {
  return _internal_zones_size();
}
inline void SubscriberZonesReply::clear_zones() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.zones_.Clear();
}
inline ::location::ZoneId *
SubscriberZonesReply::mutable_zones(int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:location.SubscriberZonesReply.zones)
  return _internal_mutable_zones()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::location::ZoneId> *
SubscriberZonesReply::mutable_zones() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:location.SubscriberZonesReply.zones)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_zones();
}
inline const ::location::ZoneId &
SubscriberZonesReply::zones(int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:location.SubscriberZonesReply.zones)
  return _internal_zones().Get(index);
}
inline ::location::ZoneId *
SubscriberZonesReply::add_zones() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::location::ZoneId *_add = _internal_mutable_zones()->Add();
  // @@protoc_insertion_point(field_add:location.SubscriberZonesReply.zones)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::location::ZoneId> &
SubscriberZonesReply::zones() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:location.SubscriberZonesReply.zones)
  return _internal_zones();
}
inline const ::google::protobuf::RepeatedPtrField<::location::ZoneId> &
SubscriberZonesReply::_internal_zones() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.zones_;
}
inline ::google::protobuf::RepeatedPtrField<::location::ZoneId> *
SubscriberZonesReply::_internal_mutable_zones() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.zones_;
}

// -------------------------------------------------------------------

// SubscribersInZoneReply

// .location.StatusCode code = 1;
inline void SubscribersInZoneReply::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_ = 0;
}
inline ::location::StatusCode SubscribersInZoneReply::code() const {
  // @@protoc_insertion_point(field_get:location.SubscribersInZoneReply.code)
  return _internal_code();
}
inline void SubscribersInZoneReply::set_code(::location::StatusCode value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:location.SubscribersInZoneReply.code)
}
inline ::location::StatusCode SubscribersInZoneReply::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::location::StatusCode>(_impl_.code_);
}
inline void
SubscribersInZoneReply::_internal_set_code(::location::StatusCode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_ = value;
}

// repeated .location.SubscriberId subscribers = 2;
inline int SubscribersInZoneReply::_internal_subscribers_size() const {
  return _internal_subscribers().size();
}
inline int SubscribersInZoneReply::subscribers_size() const {
  return _internal_subscribers_size();
}
inline void SubscribersInZoneReply::clear_subscribers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subscribers_.Clear();
}
inline ::location::SubscriberId *SubscribersInZoneReply::mutable_subscribers(
    int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:location.SubscribersInZoneReply.subscribers)
  return _internal_mutable_subscribers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::location::SubscriberId> *
SubscribersInZoneReply::mutable_subscribers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:location.SubscribersInZoneReply.subscribers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_subscribers();
}
inline const ::location::SubscriberId &SubscribersInZoneReply::subscribers(
    int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:location.SubscribersInZoneReply.subscribers)
  return _internal_subscribers().Get(index);
}
inline ::location::SubscriberId *
SubscribersInZoneReply::add_subscribers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::location::SubscriberId *_add = _internal_mutable_subscribers()->Add();
  // @@protoc_insertion_point(field_add:location.SubscribersInZoneReply.subscribers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::location::SubscriberId> &
SubscribersInZoneReply::subscribers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:location.SubscribersInZoneReply.subscribers)
  return _internal_subscribers();
}
inline const ::google::protobuf::RepeatedPtrField<::location::SubscriberId> &
SubscribersInZoneReply::_internal_subscribers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subscribers_;
}
inline ::google::protobuf::RepeatedPtrField<::location::SubscriberId> *
SubscribersInZoneReply::_internal_mutable_subscribers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.subscribers_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif // __GNUC__

// @@protoc_insertion_point(namespace_scope)
} // namespace location

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif // GOOGLE_PROTOBUF_INCLUDED_location_5fservice_2eproto_2epb_2eh
